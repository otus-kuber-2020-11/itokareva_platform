prometheusOperator:
#  tolerations:
#  - key: nodeRole
#    operator: Equal
#    value: infra
#    effect: NoSchedule
  nodeSelector:
    cloud.google.com/gke-nodepool: infra 

  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 256Mi

prometheus:
  enabled: true

  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
#    tolerations:
#    - key: nodeRole
#      operator: Equal
#      value: infra
#      effect: NoSchedule
    nodeSelector:
      cloud.google.com/gke-nodepool: infra 
    resources:
      limits:
        memory: 500Mi
      requests:
        memory: 300Mi
        cpu: 10m

  serviceMonitorSelector:
    matchLabels:
      prometheus: default

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:	 
      - prometheus

kubeDns:
  enabled: true 
kubeScheduler:
  enabled: false
coreDns:
  enabled: false
kubeControllerManager:
  enabled: false
grafana:
  resources:
    limits:
      memory: 128Mi
    requests:
      memory: 64Mi
      cpu: 10m
  enabled: true
  ingress:
    enabled: true 
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts: 
      - grafana
####### не тестировала добавление datasource
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard

      ## Annotations for Grafana dashboard configmaps
      ##
      annotations: {}
      multicluster: false
    datasources:
      enabled: true
      defaultDatasourceEnabled: true
    additionalDataSources:
      ## Annotations for Grafana datasource configmaps
      ##
      name: Loki
      type: Loki
      url: http://loki:3100/
      access: direct
######
alertmanager:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - alertmanager
  alertmanagerSpec:
#    tolerations:
#    - key: nodeRole
#      operator: Equal
#      value: infra
#      effect: NoSchedule
    nodeSelector:
      cloud.google.com/gke-nodepool: infra

  config:
    global:
      slack_api_url: 'https://hooks.slack.com/services/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'
      resolve_timeout: 5m
    route:
      group_by: ["alertname","job"]
      group_wait: 1s
      group_interval: 5m
      repeat_interval: 12h
      receiver: "null"
      routes:
      - match_re:
          alertname: Watchdog
        receiver: "null"
      - match_re:
          severity: "warning|critical"
        receiver: "slack"
  
    receivers:
    - name: "null"
    - name: "slack"   
      slack_configs:
        - channel: "#irina_tokareva"
          send_resolved: true



